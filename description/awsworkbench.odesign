<?xml version="1.0" encoding="UTF-8"?>
<description:Group xmi:version="2.0" xmlns:xmi="http://www.omg.org/XMI" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:description="http://www.eclipse.org/sirius/description/1.1.0" xmlns:description_1="http://www.eclipse.org/sirius/diagram/description/1.1.0" xmlns:properties="http://www.eclipse.org/sirius/properties/1.0.0" xmlns:properties-ext-widgets-reference="http://www.eclipse.org/sirius/properties/1.0.0/ext/widgets/reference" xmlns:style="http://www.eclipse.org/sirius/diagram/description/style/1.1.0" xmlns:tool="http://www.eclipse.org/sirius/diagram/description/tool/1.1.0" xmlns:tool_1="http://www.eclipse.org/sirius/description/tool/1.1.0" name="awsworkbench" version="12.0.0.2017041100">
  <ownedViewpoints name="MyViewpoint">
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="AWS App Definition" domainClass="awsworkbench::AppBuilder_core" enablePopupBars="true">
      <metamodel href="http://www.amazon.com/awsworkbench#/"/>
      <defaultLayer name="Default">
        <containerMappings name="Stack" semanticCandidatesExpression="feature:stackbuilder_core" doubleClickDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='AWS%20App%20Definition']/@defaultLayer/@toolSections.0/@ownedTools[name='StackDblClick']" domainClass="awsworkbench::StackBuilder_core">
          <subNodeMappings name="stack_elements" semanticCandidatesExpression="feature:serviceresources" doubleClickDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='AWS%20App%20Definition']/@defaultLayer/@toolSections.0/@ownedTools[name='VPCDblClick']" domainClass="awsworkbench::ServiceResources">
            <style xsi:type="style:SquareDescription" labelSize="12" labelExpression="" labelPosition="node" resizeKind="NSEW">
              <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <labelFormat>bold</labelFormat>
              <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
              <color xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='yellow']"/>
            </style>
          </subNodeMappings>
          <style xsi:type="style:WorkspaceImageDescription" borderSizeComputationExpression="4" borderLineStyle="dash" labelSize="12" labelExpression="feature:varName" labelAlignment="LEFT">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </containerMappings>
        <toolSections name="Interactions">
          <ownedTools xsi:type="tool:DoubleClickDescription" name="StackDblClick" mappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='AWS%20App%20Definition']/@defaultLayer/@containerMappings[name='Stack']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Stack%20Definition']"/>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:DoubleClickDescription" name="VPCDblClick" forceRefresh="true" mappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='AWS%20App%20Definition']/@defaultLayer/@containerMappings[name='Stack']/@subNodeMappings[name='stack_elements'] //@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Stack%20Definition']/@defaultLayer/@nodeMappings[name='VPC']">
            <element name="element"/>
            <elementView name="elementView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool:Navigation" createIfNotExistent="true" diagramDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='VPC%20Diagram']"/>
            </initialOperation>
          </ownedTools>
        </toolSections>
        <toolSections name="Palette">
          <ownedTools xsi:type="tool:ContainerCreationDescription" name="Stack_create" containerMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='AWS%20App%20Definition']/@defaultLayer/@containerMappings[name='Stack']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="awsworkbench::StackBuilder_core" referenceName="stackbuilder_core"/>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool_1:PopupMenu" name="Generate" precondition="aql:true">
            <menuItemDescription xsi:type="tool_1:OperationAction" name="Code" precondition="aql:self.generatedClassName.contains('core.App')" elementsToSelect="var:self">
              <view name="views"/>
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.getPopupMenu()"/>
              </initialOperation>
            </menuItemDescription>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="Stack Definition" label="Stacks" initialisation="true" domainClass="awsworkbench::StackBuilder_core" enablePopupBars="true">
      <defaultLayer name="Default">
        <nodeMappings name="VPC" semanticCandidatesExpression="feature:serviceresources" doubleClickDescription="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='AWS%20App%20Definition']/@defaultLayer/@toolSections.0/@ownedTools[name='VPCDblClick']" domainClass="awsworkbench::VpcBuilder_ec2">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" labelExpression="feature:varName" labelAlignment="LEFT" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/awsworkbench.design/icons/VPC.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <nodeMappings name="Environment" semanticCandidatesExpression="feature:environmentbuilder_core" domainClass="awsworkbench::EnvironmentBuilder_core">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" labelExpression="feature:varName" labelAlignment="LEFT" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/awsworkbench.design/icons/Environment.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
        <toolSections name="Stack Pallette">
          <ownedTools xsi:type="tool:NodeCreationDescription" name="VPC Create" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Stack%20Definition']/@defaultLayer/@nodeMappings[name='VPC']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="awsworkbench::VpcBuilder_ec2" referenceName="serviceresources">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="varName" valueExpression="Default VPC"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
          <ownedTools xsi:type="tool:NodeCreationDescription" name="Environment" forceRefresh="true" nodeMappings="//@ownedViewpoints[name='MyViewpoint']/@ownedRepresentations[name='Stack%20Definition']/@defaultLayer/@nodeMappings[name='Environment']">
            <variable name="container"/>
            <viewVariable name="containerView"/>
            <initialOperation>
              <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="var:container">
                <subModelOperations xsi:type="tool_1:CreateInstance" typeName="awsworkbench::EnvironmentBuilder_core" referenceName="environmentbuilder_core">
                  <subModelOperations xsi:type="tool_1:SetValue" featureName="varName" valueExpression="Environment Name"/>
                </subModelOperations>
              </firstModelOperations>
            </initialOperation>
          </ownedTools>
        </toolSections>
      </defaultLayer>
    </ownedRepresentations>
    <ownedRepresentations xsi:type="description_1:DiagramDescription" name="VPC Diagram" domainClass="awsworkbench::VpcBuilder_ec2" enablePopupBars="true">
      <defaultLayer name="Default">
        <nodeMappings name="Subnet" semanticCandidatesExpression="feature:subnetbuilder_ec2" domainClass="awsworkbench::SubnetBuilder_ec2">
          <style xsi:type="style:WorkspaceImageDescription" labelSize="12" sizeComputationExpression="-1" labelPosition="node" resizeKind="NSEW" workspacePath="/awsworkbench.design/icons/StackBuilder.png">
            <borderColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
            <labelColor xsi:type="description:SystemColor" href="environment:/viewpoint#//@systemColors/@entries[name='black']"/>
          </style>
        </nodeMappings>
      </defaultLayer>
    </ownedRepresentations>
    <ownedJavaExtensions qualifiedClassName="awsworkbench.design.Services"/>
  </ownedViewpoints>
  <extensions xsi:type="properties:ViewExtensionDescription" name="sirius_default_rules_properties">
    <categories name="Default">
      <pages name="sirius_default_rules_defaultpage" labelExpression="aql:input.emfEditServices(self).getTabName()" semanticCandidateExpression="aql:input.getAllSemanticElements()" groups="//@extensions.0/@categories.0/@groups.0"/>
      <groups name="sirius_default_rules_defaultgroup" labelExpression="Properties" semanticCandidateExpression="var:self" preconditionExpression="">
        <controls xsi:type="properties:DynamicMappingForDescription" name="sirius_default_rules_structural_features_for" iterator="eStructuralFeature" iterableExpression="aql:input.emfEditServices(self).getEStructuralFeatures()">
          <ifs name="sirius_default_rules_mono_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and not input.emfEditServices(self).isMultiline(eStructuralFeature) and not ( eStructuralFeature.name.endsWith('AsList') or eStructuralFeature.name.endsWith('AsMap') or eStructuralFeature.name.endsWith('additionalCode') )">
            <widget xsi:type="properties:TextDescription" name="sirius_default_rules_mono_string" labelExpression="aql:self.getLabel(eStructuralFeature)" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_multi_string_if" predicateExpression="aql:input.emfEditServices(self).needsTextWidget(eStructuralFeature) and eStructuralFeature.name.endsWith('additionalCode') and  not ( eStructuralFeature.name.endsWith('AsList') or eStructuralFeature.name.endsWith('AsMap')  ) ">
            <widget xsi:type="properties:TextAreaDescription" name="sirius_default_rules_multi_string" labelExpression="aql:self.getLabel(eStructuralFeature)" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_mono_boolean" predicateExpression="aql:input.emfEditServices(self).needsCheckboxWidget(eStructuralFeature)">
            <widget xsi:type="properties:CheckboxDescription" name="sirius_default_rules_mono_boolean" labelExpression="aql:self.getLabel(eStructuralFeature)" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_enum_if" predicateExpression="aql:eStructuralFeature.eType.oclIsKindOf(ecore::EEnum) and not(eStructuralFeature.many)">
            <widget xsi:type="properties:RadioDescription" name="sirius_default_rules_enum" labelExpression="aql:self.getLabel(eStructuralFeature)" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).getEEnumLiteralByLiteral(self.eGet(eStructuralFeature.name).toString())" candidatesExpression="aql:eStructuralFeature.eType.oclAsType(ecore::EEnum).eLiterals" candidateDisplayExpression="aql:candidate.name" numberOfColumns="5">
              <initialOperation>
                <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:input.emfEditServices(self).setValue(eStructuralFeature, newValue.instance)"/>
              </initialOperation>
              <conditionalStyles preconditionExpression="aql:eStructuralFeature.lowerBound==1">
                <style>
                  <labelFontFormat>bold</labelFontFormat>
                </style>
              </conditionalStyles>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_eattribute_many_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EAttribute) and eStructuralFeature.many">
            <widget xsi:type="properties:ListDescription" name="sirius_default_rules_eattribute_many" labelExpression="aql:self.getLabel(eStructuralFeature)" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" isEnabledExpression="aql:eStructuralFeature.changeable" valueExpression="aql:self.eGet(eStructuralFeature.name)" displayExpression="var:value"/>
          </ifs>
          <ifs name="sirius_default_rules_ereference_if" predicateExpression="aql:eStructuralFeature.oclIsKindOf(ecore::EReference)">
            <widget xsi:type="properties-ext-widgets-reference:ExtReferenceDescription" name="sirius_default_rules_ereference" labelExpression="aql:self.getLabel(eStructuralFeature)" helpExpression="aql:input.emfEditServices(self).getDescription(eStructuralFeature)" referenceNameExpression="aql:eStructuralFeature.name"/>
          </ifs>
          <ifs name="sirius_default_rules_elist_if" predicateExpression="aql:eStructuralFeature.name.endsWith('AsList')">
            <widget xsi:type="properties:ListDescription" name="list " labelExpression="aql:self.getLabel(eStructuralFeature)" helpExpression="aql:self.getDescription(eStructuralFeature)" isEnabledExpression="aql:true" valueExpression="service:getPropertyValueStringAsCollection(eStructuralFeature)" displayExpression="aql:value">
              <actions labelExpression="Remove value">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.removeValue(eStructuralFeature,selection)"/>
                </initialOperation>
              </actions>
              <actions labelExpression="Add value">
                <initialOperation>
                  <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Dialog">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation/>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0/@controls.0/@ifs.6/@widget/@actions.1/@initialOperation/@firstModelOperations/@groups.0"/>
                    <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" name="key" labelExpression="Value">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.addValue(eStructuralFeature,newValue)"/>
                        </initialOperation>
                      </controls>
                    </groups>
                  </firstModelOperations>
                </initialOperation>
              </actions>
            </widget>
          </ifs>
          <ifs name="sirius_default_rules_emap_if" predicateExpression="aql:eStructuralFeature.name.endsWith('AsMap')">
            <widget xsi:type="properties:ListDescription" name="map" labelExpression="aql:self.getLabel(eStructuralFeature)" helpExpression="aql:self.getDescription(eStructuralFeature)" isEnabledExpression="aql:true" valueExpression="service:getPropertyValueStringAsCollection(eStructuralFeature)" displayExpression="aql:value">
              <actions labelExpression="Remove value">
                <initialOperation>
                  <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.removeValue(eStructuralFeature,selection)"/>
                </initialOperation>
              </actions>
              <actions labelExpression="Add value">
                <initialOperation>
                  <firstModelOperations xsi:type="properties:DialogModelOperation" titleExpression="New Dialog">
                    <buttons labelExpression="Cancel" closeDialogOnClick="true" rollbackChangesOnClose="true">
                      <initialOperation/>
                    </buttons>
                    <buttons labelExpression="OK" default="true" closeDialogOnClick="true">
                      <initialOperation/>
                    </buttons>
                    <page name="Default Page" labelExpression="Page" semanticCandidateExpression="var:self" groups="//@extensions.0/@categories.0/@groups.0/@controls.0/@ifs.7/@widget/@actions.1/@initialOperation/@firstModelOperations/@groups.0"/>
                    <groups name="Default Group" labelExpression="Group" semanticCandidateExpression="var:self">
                      <controls xsi:type="properties:TextDescription" name="key" labelExpression="Key:Value" helpExpression="Enter the key and value separated by a colon" isEnabledExpression="true">
                        <initialOperation>
                          <firstModelOperations xsi:type="tool_1:ChangeContext" browseExpression="aql:self.addValue(eStructuralFeature,newValue)"/>
                        </initialOperation>
                      </controls>
                    </groups>
                  </firstModelOperations>
                </initialOperation>
              </actions>
            </widget>
          </ifs>
        </controls>
      </groups>
    </categories>
  </extensions>
</description:Group>
